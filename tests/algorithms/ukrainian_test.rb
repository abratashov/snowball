# Words test set
# https://raw.githubusercontent.com/snowballstem/snowball-data/master/russian/voc.txt

# Граматика української мови
# https://uk.wikipedia.org/wiki/%D0%93%D1%80%D0%B0%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0_%D1%83%D0%BA%D1%80%D0%B0%D1%97%D0%BD%D1%81%D1%8C%D0%BA%D0%BE%D1%97_%D0%BC%D0%BE%D0%B2%D0%B8


# 1
# runtime/utilities.c
# comment out 'debug' function:
  #if 1
        # fprintf(stderr, "faulty slice operation:\n");
        # debug(z, -1, 0);

  #if 1
  #extern void debug(struct SN_env * z, int number, int line_count) {

# insert 'debug' where debugging is needed:
# src_c/stem_UTF_8_ukrainian.c
# static int r_perfective_gerund(struct SN_env * z) {
  # printf("R1: ");
  # printf("R2: ");
  # debug(z, -1, 0);

# 2
# bin/utf_to_sbl ./explanations/ukrainian.sbl.utf > algorithms/ukrainian.sbl && make


# 4
# ruby tests/algorithms/ukrainian_test.rb
# ./snowball algorithms/ukrainian_test.sbl -syntax
# ./snowball algorithms/english.sbl -syntax


perfective_gerund = {
  'в'      => %w[донаписа|в    дороби|в дороби|в],
  'вши'    => %w[написа|вши    зроби|вши],
  'вшись'  => %w[оберіга|вшись спакува|вшись],
  'вшися'  => %w[оберіга|вшися сподіва|вшися],
    # (а и )
  'учи'    => %w[пиш|учи       рев|учи],
  'ючи'    => %w[ся|ючи        підпису|ючи],
  'ючись'  => %w[змага|ючись],
  'ючися'  => %w[навча|ючися],
  'ачи'    => %w[бач|ачи],
  'ачись'  => %w[бач|ачись],
  'ачися'  => %w[бач|ачися],
  'лячи'   => %w[роб|лячи      люб|лячи],
  'лячись' => %w[бав|лячись],
  'лячися' => %w[бав|лячися],
  'ячи'    => %w[сид|ячи       вовтуз|ячи],
  'ячись'  => %w[],
  'ячися'  => %w[]
}

adjective = {
  'ий ого ому им ім'            => %w[зелен|ий    зелен|ого   зелен|ому   зелен|им    зелен|ім],
  'іший ішого ішому ішим ішім'  => %w[зелен|іший  зелен|ішого зелен|ішому зелен|ішим  зелен|ішім],
  'е іше'                       => %w[зелен|е     зелен|іше],
  'а ої ій у ою'                => %w[зелен|а     зелен|ої    зелен|ій    зелен|у     зелен|ою],
  'іша ішої ішій ішу ішою'      => %w[зелен|іша   зелен|ішої  зелен|ішій  зелен|ішу   зелен|ішою],
  'і их ими'                    => %w[зелен|і     зелен|их    зелен|ими],
  'іші іших ішими'              => %w[зелен|іші   зелен|іших  зелен|ішими],
  'ього ьому'                   => %w[верхн|ього  верхн|ьому],
  'я ьої ю ьою'                 => %w[верхн|я     верхн|ьої   верхн|ю     верхн|ьою],
  'іх іми'                      => %w[верхн|іх    верхн|іми],
}

adjectival = {
  # нн => беспреста|нн.о  деревя|нн.ыми
  'ячий ячого ячому ячим ячім'  => %w[сид|ячий    сид|ячого     сид|ячому     сид|ячим      сид|ячім],
  'яча яче ячої ячій ячу ячою'  => %w[сид|яча     сид|яче       сид|ячої      сид|ячій      сид|ячу     сид|ячою],
  'ячі ячих ячими'              => %w[сид|ячі     сид|ячих      сид|ячими],
  'ачий ачого ачому ачим ачім'  => %w[дриж|ачий   дриж|ачого    дриж|ачому    дриж|ачим     дриж|ачім],
  'ача аче ачої ачій ачу ачою'  => %w[дриж|ача    дриж|аче      дриж|ачої     дриж|ачій     дриж|ачу    дриж|ачою],
  'ачі ачих  ачими'             => %w[дриж|ачі    дриж|ачих     дриж |ачими],
  'ючий ючого ючому ючим ючім'  => %w[далені|ючий далені|ючого  даленію|ючому далені|ючим   далені|ючім],
  'юча юче ючої ючій ючу ючою'  => %w[далені|юча  далені|юче    далені|ючої   даленію|ючій  далені|ючу  далені|ючою],
  'ючі ючих ючими'              => %w[далені|ючі  далені|ючих   далені|ючими],
  'учий учого учому учим учім'  => %w[пиш|учий    далені|учого  пиш|учому     пиш|учим      пиш|учім],
  'уча уче учої учій учу учою'  => %w[пиш|уча     пиш|уче       пиш|учої      пиш|учій      пиш|учу     пиш|учою],
  'учі учих учими'              => %w[пиш|учі     пиш|учих      пиш|учими],
  'ений еного еному еним енім'  => %w[втрач|ений  втрач|еного   втрач|еному   втрач|еним    втрач|енім ],
  'ена ене еної еній ену еною'  => %w[втрач|ена   втрач|ене     втрач|еної    втрач|еній    втрач|ену   втрач|еною],
  'ені ених еними'              => %w[втрач|ені   втрач|ених    втрач|еними],
}

reflexive = {
  'ся'    => %w[осік|ся],
  'сь'    => %w[недонавчи|сь], # вчи|сь
  'тися'  => %w[би|тися],
  'тись'  => %w[боро|тись],
  # 'ться'  => %w[роби|ться], # => роб|иться !? - бере завжди довший, треба інше слово підібрати або видалити якесь з правил
  'іться' => %w[подруж|іться],
  'теся'  => %w[бав|теся],
  'йся'   => %w[вдума|йся],
  'йтеся' => %w[вдума|йтеся],
  'вся лася лося лися'                => %w[вчи|вся   вчи|лася  вчи|лося    вчи|лися],
  'всь лась лось лись'                => %w[вчи|всь   вчи|лась  вчи|лось    вчи|лись],
  'юся єшся ється ємося єтеся ються'  => %w[смі|юся   смі|єшся  смі|ється   смі|ємося   смі|єтеся   смі|ються],
  'уся ешся еться емося етеся уться'  => %w[спиш|уся  спиш|ешся спиш|еться  спиш|емося  спиш|етеся  спиш|уться],
  'люся ишся иться имося итеся ляться'=> %w[див|люся  див|ишся  див|иться   див|имося   див|итеся   див|ляться],
  'їшся їться їмося їтеся яться'      => %w[бо|їшся   бо|їться  бо|їмося    бо|їтеся    бо|яться],
  'аться'                             => %w[бач|аться],
}

verb = {
  'ти'  => %w[працюва|ти],
  # 'ть'  => %w[роби|ть], # => роб|ить !? - бере завжди довший, треба інше слово підібрати або видалити якесь з правил
  'іть' => %w[роб|іть],
  'те'  => %w[відправ|те],
  'й'   => %w[чита|й],
  'йте' => %w[дума|йте],
  'в ла ло ли'              => %w[чита|в  чита|ла чита|ло   чита|ли],
  'ю єш є ємо єте ють'      => %w[чита|ю  чита|єш чита|є    чита|ємо  чита|єте  чита|ють],
  'у еш е емо ете уть'      => %w[пиш|у   пиш|еш  пиш|е     пиш|емо   пиш|ете   пиш|уть],
  'лю иш ить имо ите лять'  => %w[роб|лю  роб|иш  роб|ить   роб|имо   роб|ите   роб|лять],
  'їш їть їмо їте ять'      => %w[сто|їш  сто|їть сто|їмо   сто|їте   сто|ять],
  'ать'                     => %w[бач|ать],
}

noun = {
  'а и і у ою о'    => %w[вод|а       вод|и     вод|і   вод|у   вод|ою  вод|о],
  'ам ами ах'       => %w[вод|ам      вод|ами   вод|ах],
  'я ю ею е'        => %w[пісн|я      пісн|ю    пісн|ею пісн|е],
  'ям ями ях'       => %w[пісн|ям     пісн|ями  пісн|ях],
  'ові ом'          => %w[батьк|ові   батьк|ом],
  'ець ем'          => %w[олів|ець    олівц|ем], # ю олівц|ю - повтор
  'ень'             => %w[зел|ень],
  'ій'              => %w[ген|ій],
  'й'               => %w[сара|й],
  'ой'              => %w[гер|ой],
  'ь'               => %w[совіст|ь],
  'ію ії'           => %w[комед|ію    комед|ії],
}

# derivational = {
#   'остей'  => %w[люб'язн|остей],
#   'ість' => %w[люб'язн|ість]
# }

# tidy_up = {
#   'н[н]ейш'  => %w[наиполезн|ейший    смирен|нейший],
#   'н[н]ейше' => %w[многочислен|нейшее сильн|ейшее],
#   'н[н]'     => %w[смирен|но          смирн|о],
#   'ь'        => %w[свідоміст|ь]
# }

# exceptions = {
#   # ё => е
#   'угнетённый' => 'угнетен',

#   # -ию => ''
#   'академию' => 'академ'
# }

$all_tests = []
$errors = {}

def incorrect_stem_msg(result_stem, word, stem)
  "Incorrect stemming '#{result_stem}' for word '#{word}', should be '#{stem}'"
end

def check_words_set(words_set, set_name)
  words_set.each do |_rule, test_cases|
    test_cases.each do |test_case|
      stem, ending = test_case.split('|')
      word = [stem, ending].join
      $all_tests << word

      result_stem = (`echo "#{word}" | ./stemwords -l uk`).strip

      $errors[set_name] ||= []
      $errors[set_name] << incorrect_stem_msg(result_stem, word, stem) if result_stem != stem
    end
  end
end

[
  [perfective_gerund, 'perfective_gerund'],
  [adjective, 'adjective'],
  [adjectival, 'adjectival'],
  [reflexive, 'reflexive'],
  [verb, 'verb'],
  [noun, 'noun'],
  # [derivational, 'derivational'],
  # [tidy_up, 'tidy_up']
].each do |words_set, set_name|
  check_words_set(words_set, set_name)
end

# exceptions.each do |word, stem|
#   $all_tests << word
#   result_stem = (`echo "#{word}" | ./stemwords -syntax -l uk `).strip
#   $errors << incorrect_stem_msg(result_stem, word, stem) if result_stem != stem
# end

if $errors.empty?
  puts("#{$all_tests.count} test(s) passed successfully!")
else
  $errors.each do |set_name, errs|
    next if errs.empty?

    puts "=== #{set_name}:"
    puts(errs.join("\n"))
  end
end
